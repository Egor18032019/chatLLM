{"version":3,"sources":["components/Admin/Admin.js","components/Nav/Nav.js","components/Input/Input.js","components/LoginForm/LoginForm.js","components/LoginForm/index.js","components/Messages/Messages.js","utils/const.js","services/chatapi.js","Root.js","utils/common.js","App.js","index.js"],"names":["Admin","React","createElement","Links","links","console","log","JSON","stringify","className","data","map","link","key","href","NavLink","to","label","Nav","Input","_ref","onSendMessage","text","setText","useState","onSubmit","TextField","placeholder","onChange","e","target","value","margin","onKeyPress","event","style","height","width","Button","variant","color","onClick","LoginForm","username","setUsername","handleSubmit","Messages","messages","currentUser","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","msg","message","sender","content","timestamp","date","Date","backgroundColor","getHours","getMinutes","getSeconds","renderMessage","ref","api","Axios","create","baseURL","chatAPI","sendMessage","post","Root","setMessages","user","setUser","Fragment","SockJsClient","url","topics","onConnect","onConnected","onDisconnect","onMessage","concat","onMessageReceived","debug","msgText","then","res","catch","err","Math","floor","random","toString","App","BrowserRouter","Switch","Route","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52700330.chunk.js","sourcesContent":["import React  from 'react';\r\nexport default function Admin() {\r\n  return (\r\n    <div>\r\n      <h1>Главная страница</h1>\r\n      <ul>\r\n        Список клиентов\r\n        <li>1</li>\r\n        <li>2</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as data from './link.json';\r\nimport styles from './Nav.css';\r\n\r\n\r\nconst Links = (links) => {\r\n    console.log(JSON.stringify(links) + \"- stringify\")\r\n    return (\r\n        <div className=\"menu-cards\">\r\n            {data.links.map((link) => {\r\n\r\n                return (\r\n                    <div key={link.href} className=\"card-link\">\r\n                        <NavLink to={link.href} className=\"card-link\">\r\n                            {link.label}\r\n                        </NavLink>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <div className=\"navi\">\r\n            <div className=\"logo-container\">\r\n                <span>Giga chat education</span>\r\n            </div>\r\n\r\n            <Links links={data}  />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Input = ({ onSendMessage }) => {\r\n    const [text, setText] = useState(\"\")\r\n\r\n    let onChange = (e) => {\r\n        setText(e.target.value)\r\n    }\r\n\r\n    let onSubmit = () => {\r\n        setText(\"\")\r\n        onSendMessage(text);\r\n    }\r\n\r\n    return (\r\n        <div className=\"message-input\">\r\n            <TextField\r\n                className=\"inputField\"\r\n                label=\"Type your message here...\"\r\n                placeholder=\"Enter your message and press ENTER\"\r\n                onChange={e => onChange(e)}\r\n                margin=\"normal\"\r\n                value={text}\r\n                onKeyPress={event => {\r\n                    if (event.key === 'Enter') {\r\n                        onSubmit(text);\r\n                    }\r\n                }}\r\n                style={{ height: \"30px\", width: \"80%\" }}\r\n            />\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                Send\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Input\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst LoginForm = ({ onSubmit }) => {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    let handleUserNameChange = event => setUsername(event.target.value);\r\n\r\n    let handleSubmit = () => {\r\n        onSubmit(username);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label=\"Type your username\"\r\n                placeholder=\"Username\"\r\n                onChange={handleUserNameChange}\r\n                margin=\"normal\"\r\n                onKeyPress={event => {\r\n                    if (event.key === 'Enter') {\r\n                        handleSubmit();\r\n                    }\r\n                }}\r\n            />\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} >\r\n                Login\r\n             </Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import LoginForm from \"./LoginForm\"\r\n\r\nexport default LoginForm;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\n\r\nconst Messages = ({ messages, currentUser }) => {\r\n\r\n    let renderMessage = (message) => {\r\n        const { sender, content, timestamp, color } = message;\r\n        const messageFromMe = currentUser.username === message.sender;\r\n        const className = messageFromMe ? \"Messages-message currentUser\" : \"Messages-message\";\r\n        let date = new Date(timestamp);\r\n        return (\r\n            <li className={className}>\r\n                <span\r\n                    className=\"avatar\"\r\n                    style={{ backgroundColor: color }}\r\n                />\r\n                <div className=\"Message-content\">\r\n                    <div className=\"username\">\r\n                        {sender}\r\n                        <span>{\" in \" + date.getHours() + \" : \" + date.getMinutes() + \" : \" + date.getSeconds()}</span>\r\n                    </div>\r\n                    <div className=\"text\">{content}</div>\r\n                </div>\r\n            </li>\r\n        );\r\n    };\r\n\r\n    const messagesEndRef = useRef(null);\r\n    // Прокрутка вниз после добавления сообщения\r\n    useEffect(() => {\r\n        if (messagesEndRef.current) {\r\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }, [messages]);\r\n\r\n    return (\r\n        <ul className=\"messages-list\">\r\n            {messages.map(msg => renderMessage(msg))}\r\n            {/* \"Якорь\" для скролла */}\r\n            <div ref={messagesEndRef} />\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default Messages","const SOCKET_URL = 'http://127.0.0.1:8080/ws-chat/';\r\nconst TOPIC = '/topic/group';\r\nconst BASE_URL_API = \"/api\";\r\nconst BASE_URL_SEND = \"/send\";\r\nexport {\r\n    SOCKET_URL,\r\n    BASE_URL_API,\r\n    BASE_URL_SEND,\r\n    TOPIC\r\n}","import Axios from \"axios\";\r\nimport {BASE_URL_API, BASE_URL_SEND} from \"../utils/const\";\r\nconst api = Axios.create({\r\n    baseURL: BASE_URL_API\r\n});\r\n\r\nconst chatAPI = {\r\n    // getMessages: (groupId) => {\r\n    //     return api.get(`messages/${groupId}`);\r\n    // },\r\n\r\n    sendMessage: (username, text) => {\r\n        console.log('sendMessage ' + text);\r\n        let msg = {\r\n            sender: username,\r\n            content: text\r\n        }\r\n\r\n        return api.post(BASE_URL_SEND, msg)\r\n    }\r\n}\r\n\r\n\r\nexport default chatAPI;\r\n","import React, { useState } from 'react';\r\nimport SockJsClient from 'react-stomp';\r\nimport './App.css';\r\nimport Input from './components/Input/Input';\r\nimport LoginForm from './components/LoginForm';\r\nimport Messages from './components/Messages/Messages';\r\nimport chatAPI from './services/chatapi';\r\nimport { randomColor } from './utils/common';\r\nimport { SOCKET_URL, TOPIC } from \"./utils/const\";\r\n\r\nconst Root = () => {\r\n    const [messages, setMessages] = useState([])\r\n    const [user, setUser] = useState(null)\r\n\r\n\r\n    let onConnected = () => {\r\n        console.log(\"Connected on SockJsClient !!! \")\r\n    }\r\n    let onDisconnect = () => {\r\n        console.log(\"Disconnected  !!! \")\r\n    }\r\n    let onMessageReceived = (msg) => {\r\n        console.log('New Message Received!!', msg);\r\n        setMessages(messages.concat(msg));\r\n\r\n    }\r\n\r\n    let onSendMessage = (msgText) => {\r\n        chatAPI.sendMessage(user.username, msgText).then(res => {\r\n            console.log('Sent', res);\r\n        }).catch(err => {\r\n            console.log('Error Occurred while sending message to api');\r\n        })\r\n    }\r\n\r\n    let handleLoginSubmit = (username) => {\r\n        console.log(username, \" Logged in..\");\r\n\r\n        setUser({\r\n            username: username,\r\n            color: randomColor()\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {!!user ?\r\n                (\r\n                    <>\r\n                        <SockJsClient\r\n                            url={SOCKET_URL}\r\n                            topics={[TOPIC]}\r\n                            onConnect={onConnected}\r\n                            onDisconnect={onDisconnect}\r\n                            onMessage={msg => onMessageReceived(msg)}\r\n                            debug={false}\r\n                        />\r\n                        <Messages\r\n                            messages={messages}\r\n                            currentUser={user}\r\n                        />\r\n\r\n                        <Input onSendMessage={onSendMessage} />\r\n\r\n                    </>\r\n                ) :\r\n\r\n                <LoginForm onSubmit={handleLoginSubmit} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Root;\r\n","export function randomColor() {\r\n    return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\r\n}\r\n","import React  from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Admin from \"./components/Admin/Admin\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Root from \"./Root\";\r\n\r\n\r\nexport default function App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Nav />\r\n            <Switch>\r\n                <Route path=\"/root\" component={Root} />\r\n                <Route path=\"/admin\" component={Admin} />\r\n            </Switch>\r\n\r\n        </BrowserRouter>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n "],"sourceRoot":""}